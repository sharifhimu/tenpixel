{"version":3,"sources":["components/DrawerToggleButton.js","components/Toolbar.js","components/SideDrawer.js","components/Backdrop.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","className","onClick","click","toolbar","href","drawerClickHandler","sideDrawer","drawerClasses","show","backdrop","Form","type","placeholder","class","name","App","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5f94fb4.chunk.js","sourcesContent":["\nimport React from 'react';\n\nimport './DrawerToggleButton.css';\n\nconst drawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n    </button>\n);\n\nexport default drawerToggleButton;","import React from 'react';\n\nimport DrawerToggleButton from './DrawerToggleButton';\nimport './Toolbar.css';\n\nconst toolbar = props => (\n  <header className=\"toolbar\">\n\n<div className=\"grid-container\">\n\n  <div className=\"grid-item-star\">\n  <i className=\"fa fa-star icon-star\" />\n  <i className=\"fa fa-star icon-star\" />\n  <i className=\"fa fa-star icon-star\" />\n  <i className=\"fa fa-star icon-star-br\" />\n  \n  <p className=\"icontext-star\">/8.5</p>\n </div>\n\n  <div className=\"grid-item\">\n  <i className=\"fa fa-envelope icon\" />\n  <p className=\"icontext\">Lorem ipsum doler sit amet</p>\n  </div>\n  <div className=\"grid-item\">\n  <i className=\"fa fa-linkedin icon\" />\n  <p className=\"icontext\">Lorem ipsum doler sit amet</p>\n  \n  </div>\n  <div className=\"grid-item\">\n  <i className=\"fa fa-facebook-square icon\" />\n  <p className=\"icontext\">Lorem ipsum doler sit amet</p>\n      \n  </div>  \n</div>  \n\n    <nav className=\"toolbar__navigation\">\n    \n    <div className=\"spacer1\" />\n        <div className=\"toolbar_navigation-items1\">\n            <ul>\n\n                <li><a href=\"/\">About</a></li>\n                <li><a href=\"/\">Contact us</a></li>\n            \n            </ul>\n\n        </div>\n    {/* </nav> */}\n\n    <div className=\"grid-item-star2\">\n            <i className=\"fa fa-star icon-star2\" />\n            <i className=\"fa fa-star icon-star2\" />\n            <i className=\"fa fa-star icon-star2\" />\n            <i className=\"fa fa-star icon-star-br2\" />\n            \n            <p className=\"icontext-star2\">/8.5</p>\n            </div>\n            \n        \n    {/* {/* <nav className=\"toolbar__navigation\"> */}\n         <div className=\"toolbar__toggle-button\">\n            <DrawerToggleButton click={props.drawerClickHandler} />\n        </div> \n        \n        \n\n        <div className=\"toolbar__logo\"><a href=\"/\">LOGO</a></div> \n        \n        \n\n        <div className=\"spacer2\" />\n        <div className=\"toolbar_navigation-items2\">\n            <ul>\n                 <li><a href=\"/\">Sell</a></li> \n                \n                <div className=\"dropdown\">\n                <button className=\"dropbtn\">Products</button>\n                <div className=\"dropdown-content\">\n                <a href=\"/\">Mobile</a>\n                <a href=\"/\">Motorbike</a>\n                <a href=\"/\">Cloths</a>\n                </div>\n                </div>\n\n                <li><a href=\"/\">Users</a></li>\n            </ul>\n        </div>\n    </nav>\n  </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './SideDrawer.css';\n\nconst sideDrawer = props => {\n  let drawerClasses = 'side-drawer';\n  if (props.show) {\n    drawerClasses = 'side-drawer open';\n  }\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n      <li>\n          <a href=\"/\">About</a>\n       </li>\n       <li>\n          <a href=\"/\">Contact Us</a>\n        </li>\n        <li>\n          <a href=\"/\">Sell</a>\n        </li>\n        <li>\n          {/* <a href=\"/\">Products</a> */}\n          <div className=\"dropdown\">\n                <button className=\"dropbtn\">Products</button>\n                <div className=\"dropdown-content\">\n                <a href=\"/\">Mobile</a>\n                <a href=\"/\">Motorbike</a>\n                <a href=\"/\">Cloths</a>\n                </div>\n                </div>\n        </li>\n        <li>\n          <a href=\"/\">Users</a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default sideDrawer;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click} />\n);\n\nexport default backdrop;","import React from 'react';\nimport './Form.css';\n\nconst Form = () => {\n    return (\n        \n            <div className=\"wrapper\">\n  <div className=\"payment\">\n    \n    \n    <h2>Payment Details</h2>\n    <div className=\"form\">\n      <div className=\"card space icon-relative\">\n        <label className=\"label\">Cardholder's name:</label>\n        <input type=\"text\" className=\"input\" placeholder=\"Enter your name\" />\n        <i className=\"fa fa-user\"></i>\n      </div>\n      <div className=\"card space icon-relative\">\n        <label className=\"label\">Card number:</label>\n        <input type=\"text\" className=\"input\" placeholder=\"Enter your Card Number\" />\n        <i className=\"fa fa-credit-card\"></i>\n      </div>\n      <div className=\"space\">\n      <label className=\"label\">On/Off</label>\n      <label class=\"switch\">\n        <input type=\"checkbox\" />\n        <span class=\"slider round\"></span>\n      </label>\n      </div>\n      <div className=\"card-grp space\">\n        <div className=\"card-item icon-relative\">\n          <label className=\"label\">Expiry date:</label>\n          <input type=\"number\" name=\"expiry-data\" className=\"input\"  placeholder=\"00 / 00\" />\n          <i className=\"fa fa-calendar\"></i>\n        </div>\n        <div className=\"card-item icon-relative\">\n          <label className=\"label\">CVC:</label>\n          <input type=\"text\" className=\"input\" placeholder=\"000\" />\n          <i class=\"fa fa-lock\"></i>\n        </div>\n      </div>\n        \n      {/* <div className=\"btn\">\n        Pay\n      </div>  */}\n      <button className=\"btn\" >Pay</button>\n      \n    </div>\n  </div>\n</div>\n        \n    );\n};\n\nexport default Form;","import React, { Component } from 'react';\n\nimport Toolbar from './components/Toolbar';\nimport SideDrawer from './components/SideDrawer';\nimport Backdrop from './components/Backdrop';\nimport Form from './components/Form';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />\n    }\n    return (\n      <div >\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n         <div className=\"image\" > \n          {/* <img src=\"https://www.pngkit.com/png/detail/909-9098186_free-png-download-child-group-play-png-images.png\" /> */}\n            <h3>Lorem Ipsum doler sit amet</h3>\n            <p>Lorem Ipsum doler sit amet <br />Lorem Ipsum doler sit amet Lorem Ipsum doler sit amet \n            Lorem Ipsum doler sit amet <br/>Lorem Ipsum doler sit amet Lorem Ipsum doler sit amet <br/>\n            Lorem Ipsum doler sit amet Lorem Ipsum doler sit amet Lorem Ipsum doler sit amet <br/>\n            Lorem Ipsum doler sit amet Lorem Ipsum doler sit amet <br/>\n            \n            \n            \n            </p>\n           \n           <div className=\"border-text\">\n          Lorem Ipsum doler sit amet <br />Lorem Ipsum doler sit amet          \n           <br/>\n           <i className=\"brtext-fa fa fa-star icon-star2\" />\n            <i className=\"brtext-fa fa fa-star icon-star2\" />\n            <i className=\"brtext-fa fa fa-star icon-star2\" />\n            <i className=\"brtext-fa fa fa-star icon-star2\" />\n            <i className=\"brtext-fa fa fa-star icon-star2\" />\n            \n           </div>\n\n           \n            <Form />\n         <div className=\"space\"></div>\n          \n       </div> \n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}